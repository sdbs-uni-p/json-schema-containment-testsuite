[
    {
        "id": 1,
        "schema1": {
            "type": "array",
            "items": {
                "$dynamicRef": "#items"
            },
            "$defs": {
                "foo": {
                    "$dynamicAnchor": "items",
                    "type": "string"
                }
            }
        },
        "schema2": {
            "type": "array",
            "items": {
                "$dynamicRef": "#items"
            },
            "$defs": {
                "foo": {
                    "$dynamicAnchor": "items",
                    "type": "string"
                }
            }
        },
        "tests": {
            "s1SubsetEqOfs2": true,
            "s2SubsetEqOfs1": true
        }
    },
    {
        "id": 2,
        "schema1": {
            "type": "array",
            "items": {
                "$dynamicRef": "#items"
            },
            "$defs": {
                "foo": {
                    "$anchor": "items",
                    "type": "string"
                }
            }
        },
        "schema2": {
            "type": "array",
            "items": {
                "$dynamicRef": "#items"
            },
            "$defs": {
                "foo": {
                    "$anchor": "items",
                    "type": "string"
                }
            }
        },
        "tests": {
            "s1SubsetEqOfs2": true,
            "s2SubsetEqOfs1": true
        }
    },
    {
        "id": 3,
        "schema1": {
            "type": "array",
            "items": {
                "$ref": "#items"
            },
            "$defs": {
                "foo": {
                    "$dynamicAnchor": "items",
                    "type": "string"
                }
            }
        },
        "schema2": {
            "type": "array",
            "items": {
                "$ref": "#items"
            },
            "$defs": {
                "foo": {
                    "$dynamicAnchor": "items",
                    "type": "string"
                }
            }
        },
        "tests": {
            "s1SubsetEqOfs2": true,
            "s2SubsetEqOfs1": true
        }
    },
    {
        "id": 4,
        "schema1": {
            "$id": "https://test.json-schema.org/typical-dynamic-resolution/root",
            "$ref": "list",
            "$defs": {
                "foo": {
                    "$dynamicAnchor": "items",
                    "type": "string"
                },
                "list": {
                    "$id": "list",
                    "type": "array",
                    "items": {
                        "$dynamicRef": "#items"
                    },
                    "$defs": {
                        "items": {
                            "$comment": "This is only needed to satisfy the bookending requirement",
                            "$dynamicAnchor": "items"
                        }
                    }
                }
            }
        },
        "schema2": {
            "$id": "https://test.json-schema.org/typical-dynamic-resolution/root",
            "$ref": "list",
            "$defs": {
                "foo": {
                    "$dynamicAnchor": "items",
                    "type": "string"
                },
                "list": {
                    "$id": "list",
                    "type": "array",
                    "items": {
                        "$dynamicRef": "#items"
                    },
                    "$defs": {
                        "items": {
                            "$comment": "This is only needed to satisfy the bookending requirement",
                            "$dynamicAnchor": "items"
                        }
                    }
                }
            }
        },
        "tests": {
            "s1SubsetEqOfs2": true,
            "s2SubsetEqOfs1": true
        }
    },
    {
        "id": 5,
        "schema1": {
            "$id": "https://test.json-schema.org/dynamic-resolution-with-intermediate-scopes/root",
            "$ref": "intermediate-scope",
            "$defs": {
                "foo": {
                    "$dynamicAnchor": "items",
                    "type": "string"
                },
                "intermediate-scope": {
                    "$id": "intermediate-scope",
                    "$ref": "list"
                },
                "list": {
                    "$id": "list",
                    "type": "array",
                    "items": {
                        "$dynamicRef": "#items"
                    },
                    "$defs": {
                        "items": {
                            "$comment": "This is only needed to satisfy the bookending requirement",
                            "$dynamicAnchor": "items"
                        }
                    }
                }
            }
        },
        "schema2": {
            "$id": "https://test.json-schema.org/dynamic-resolution-with-intermediate-scopes/root",
            "$ref": "intermediate-scope",
            "$defs": {
                "foo": {
                    "$dynamicAnchor": "items",
                    "type": "string"
                },
                "intermediate-scope": {
                    "$id": "intermediate-scope",
                    "$ref": "list"
                },
                "list": {
                    "$id": "list",
                    "type": "array",
                    "items": {
                        "$dynamicRef": "#items"
                    },
                    "$defs": {
                        "items": {
                            "$comment": "This is only needed to satisfy the bookending requirement",
                            "$dynamicAnchor": "items"
                        }
                    }
                }
            }
        },
        "tests": {
            "s1SubsetEqOfs2": true,
            "s2SubsetEqOfs1": true
        }
    },
    {
        "id": 6,
        "schema1": {
            "$id": "https://test.json-schema.org/dynamic-resolution-ignores-anchors/root",
            "$ref": "list",
            "$defs": {
                "foo": {
                    "$anchor": "items",
                    "type": "string"
                },
                "list": {
                    "$id": "list",
                    "type": "array",
                    "items": {
                        "$dynamicRef": "#items"
                    },
                    "$defs": {
                        "items": {
                            "$comment": "This is only needed to satisfy the bookending requirement",
                            "$dynamicAnchor": "items"
                        }
                    }
                }
            }
        },
        "schema2": {
            "$id": "https://test.json-schema.org/dynamic-resolution-ignores-anchors/root",
            "$ref": "list",
            "$defs": {
                "foo": {
                    "$anchor": "items",
                    "type": "string"
                },
                "list": {
                    "$id": "list",
                    "type": "array",
                    "items": {
                        "$dynamicRef": "#items"
                    },
                    "$defs": {
                        "items": {
                            "$comment": "This is only needed to satisfy the bookending requirement",
                            "$dynamicAnchor": "items"
                        }
                    }
                }
            }
        },
        "tests": {
            "s1SubsetEqOfs2": true,
            "s2SubsetEqOfs1": true
        }
    },
    {
        "id": 7,
        "schema1": {
            "$id": "https://test.json-schema.org/dynamic-resolution-without-bookend/root",
            "$ref": "list",
            "$defs": {
                "foo": {
                    "$dynamicAnchor": "items",
                    "type": "string"
                },
                "list": {
                    "$id": "list",
                    "type": "array",
                    "items": {
                        "$dynamicRef": "#items"
                    },
                    "$defs": {
                        "items": {
                            "$comment": "This is only needed to give the reference somewhere to resolve to when it behaves like $ref",
                            "$anchor": "items"
                        }
                    }
                }
            }
        },
        "schema2": {
            "$id": "https://test.json-schema.org/dynamic-resolution-without-bookend/root",
            "$ref": "list",
            "$defs": {
                "foo": {
                    "$dynamicAnchor": "items",
                    "type": "string"
                },
                "list": {
                    "$id": "list",
                    "type": "array",
                    "items": {
                        "$dynamicRef": "#items"
                    },
                    "$defs": {
                        "items": {
                            "$comment": "This is only needed to give the reference somewhere to resolve to when it behaves like $ref",
                            "$anchor": "items"
                        }
                    }
                }
            }
        },
        "tests": {
            "s1SubsetEqOfs2": true,
            "s2SubsetEqOfs1": true
        }
    },
    {
        "id": 8,
        "schema1": {
            "$id": "https://test.json-schema.org/unmatched-dynamic-anchor/root",
            "$ref": "list",
            "$defs": {
                "foo": {
                    "$dynamicAnchor": "items",
                    "type": "string"
                },
                "list": {
                    "$id": "list",
                    "type": "array",
                    "items": {
                        "$dynamicRef": "#items"
                    },
                    "$defs": {
                        "items": {
                            "$comment": "This is only needed to give the reference somewhere to resolve to when it behaves like $ref",
                            "$anchor": "items",
                            "$dynamicAnchor": "foo"
                        }
                    }
                }
            }
        },
        "schema2": {
            "$id": "https://test.json-schema.org/unmatched-dynamic-anchor/root",
            "$ref": "list",
            "$defs": {
                "foo": {
                    "$dynamicAnchor": "items",
                    "type": "string"
                },
                "list": {
                    "$id": "list",
                    "type": "array",
                    "items": {
                        "$dynamicRef": "#items"
                    },
                    "$defs": {
                        "items": {
                            "$comment": "This is only needed to give the reference somewhere to resolve to when it behaves like $ref",
                            "$anchor": "items",
                            "$dynamicAnchor": "foo"
                        }
                    }
                }
            }
        },
        "tests": {
            "s1SubsetEqOfs2": true,
            "s2SubsetEqOfs1": true
        }
    },
    {
        "id": 9,
        "schema1": {
            "$id": "https://test.json-schema.org/relative-dynamic-reference/root",
            "$dynamicAnchor": "meta",
            "type": "object",
            "properties": {
                "foo": {
                    "const": "pass"
                }
            },
            "$ref": "extended",
            "$defs": {
                "extended": {
                    "$id": "extended",
                    "$dynamicAnchor": "meta",
                    "type": "object",
                    "properties": {
                        "bar": {
                            "$ref": "bar"
                        }
                    }
                },
                "bar": {
                    "$id": "bar",
                    "type": "object",
                    "properties": {
                        "baz": {
                            "$dynamicRef": "extended#meta"
                        }
                    }
                }
            }
        },
        "schema2": {
            "$id": "https://test.json-schema.org/relative-dynamic-reference/root",
            "$dynamicAnchor": "meta",
            "type": "object",
            "properties": {
                "foo": {
                    "const": "pass"
                }
            },
            "$ref": "extended",
            "$defs": {
                "extended": {
                    "$id": "extended",
                    "$dynamicAnchor": "meta",
                    "type": "object",
                    "properties": {
                        "bar": {
                            "$ref": "bar"
                        }
                    }
                },
                "bar": {
                    "$id": "bar",
                    "type": "object",
                    "properties": {
                        "baz": {
                            "$dynamicRef": "extended#meta"
                        }
                    }
                }
            }
        },
        "tests": {
            "s1SubsetEqOfs2": true,
            "s2SubsetEqOfs1": true
        }
    },
    {
        "id": 10,
        "schema1": {
            "$id": "https://test.json-schema.org/relative-dynamic-reference-without-bookend/root",
            "$dynamicAnchor": "meta",
            "type": "object",
            "properties": {
                "foo": {
                    "const": "pass"
                }
            },
            "$ref": "extended",
            "$defs": {
                "extended": {
                    "$id": "extended",
                    "$anchor": "meta",
                    "type": "object",
                    "properties": {
                        "bar": {
                            "$ref": "bar"
                        }
                    }
                },
                "bar": {
                    "$id": "bar",
                    "type": "object",
                    "properties": {
                        "baz": {
                            "$dynamicRef": "extended#meta"
                        }
                    }
                }
            }
        },
        "schema2": {
            "$id": "https://test.json-schema.org/relative-dynamic-reference-without-bookend/root",
            "$dynamicAnchor": "meta",
            "type": "object",
            "properties": {
                "foo": {
                    "const": "pass"
                }
            },
            "$ref": "extended",
            "$defs": {
                "extended": {
                    "$id": "extended",
                    "$anchor": "meta",
                    "type": "object",
                    "properties": {
                        "bar": {
                            "$ref": "bar"
                        }
                    }
                },
                "bar": {
                    "$id": "bar",
                    "type": "object",
                    "properties": {
                        "baz": {
                            "$dynamicRef": "extended#meta"
                        }
                    }
                }
            }
        },
        "tests": {
            "s1SubsetEqOfs2": true,
            "s2SubsetEqOfs1": true
        }
    },
    {
        "id": 11,
        "schema1": {
            "$id": "https://test.json-schema.org/dynamic-ref-with-multiple-paths/main",
            "$defs": {
                "inner": {
                    "$id": "inner",
                    "$dynamicAnchor": "foo",
                    "title": "inner",
                    "additionalProperties": {
                        "$dynamicRef": "#foo"
                    }
                }
            },
            "if": {
                "propertyNames": {
                    "pattern": "^[a-m]"
                }
            },
            "then": {
                "title": "any type of node",
                "$id": "anyLeafNode",
                "$dynamicAnchor": "foo",
                "$ref": "main#/$defs/inner"
            },
            "else": {
                "title": "integer node",
                "$id": "integerNode",
                "$dynamicAnchor": "foo",
                "type": [
                    "object",
                    "integer"
                ],
                "$ref": "main#/$defs/inner"
            }
        },
        "schema2": {
            "$id": "https://test.json-schema.org/dynamic-ref-with-multiple-paths/main",
            "$defs": {
                "inner": {
                    "$id": "inner",
                    "$dynamicAnchor": "foo",
                    "title": "inner",
                    "additionalProperties": {
                        "$dynamicRef": "#foo"
                    }
                }
            },
            "if": {
                "propertyNames": {
                    "pattern": "^[a-m]"
                }
            },
            "then": {
                "title": "any type of node",
                "$id": "anyLeafNode",
                "$dynamicAnchor": "foo",
                "$ref": "main#/$defs/inner"
            },
            "else": {
                "title": "integer node",
                "$id": "integerNode",
                "$dynamicAnchor": "foo",
                "type": [
                    "object",
                    "integer"
                ],
                "$ref": "main#/$defs/inner"
            }
        },
        "tests": {
            "s1SubsetEqOfs2": true,
            "s2SubsetEqOfs1": true
        }
    }
]